import streamlit as st
import numpy as np
import pandas as pd
import plotly.express as px

# --- Definici칩n de los Modelos ---

def exponential_growth(P0, r, t_values):
    """Calcula el crecimiento exponencial."""
    # P(t) = P0 * e^(r*t)
    return P0 * np.exp(r * t_values)

def logistic_growth(P0, r, K, t_values):
    """Calcula el crecimiento log칤stico."""
    # P(t) = K / (1 + ((K - P0) / P0) * e^(-r*t))
    return K / (1 + ((K - P0) / P0) * np.exp(-r * t_values))

# --- Configuraci칩n de la P치gina de Streamlit ---
st.set_page_config(page_title="Simulador de Crecimiento", layout="wide")
st.title("游늳 Simulador de Modelos de Crecimiento")
st.write("Usa los controles en la barra lateral para ajustar los par치metros de diferentes modelos de crecimiento y ver c칩mo evolucionan.")

# --- Barra Lateral de Controles ---
st.sidebar.header("Par치metros de Simulaci칩n")

# Par치metros comunes
P0 = st.sidebar.slider("Poblaci칩n Inicial (P0)", 1, 1000, 50)
t_max = st.sidebar.slider("N칰mero de Per칤odos (t)", 10, 200, 50)
r = st.sidebar.slider("Tasa de Crecimiento (r)", 0.01, 1.0, 0.1, step=0.01)

# Par치metro espec칤fico para el modelo log칤stico
st.sidebar.markdown("---")
st.sidebar.subheader("Par치metros Log칤sticos")
K = st.sidebar.slider("Capacidad de Carga (K)", 500, 50000, 10000)
st.sidebar.info("La Capacidad de Carga (K) solo se aplica al modelo log칤stico.")


# --- Generaci칩n de Datos ---
t_values = np.arange(0, t_max + 1)

# Crear un DataFrame para almacenar los resultados
df_growth = pd.DataFrame({'Per칤odo': t_values})

# Calcular los dos escenarios
df_growth['Crecimiento Exponencial'] = exponential_growth(P0, r, t_values)
df_growth['Crecimiento Log칤stico'] = logistic_growth(P0, r, K, t_values)

# --- Visualizaci칩n ---
st.subheader("Visualizaci칩n de Escenarios de Crecimiento")

# Re-formatear el DataFrame para que sea compatible con Plotly (formato "largo")
df_melted = df_growth.melt(
    id_vars='Per칤odo', 
    value_vars=['Crecimiento Exponencial', 'Crecimiento Log칤stico'],
    var_name='Tipo de Modelo', 
    value_name='Poblaci칩n'
)

# Crear el gr치fico interactivo con Plotly
fig = px.line(
    df_melted,
    x='Per칤odo',
    y='Poblaci칩n',
    color='Tipo de Modelo',
    title=f"Simulaci칩n de Crecimiento (P0={P0}, r={r}, K={K})",
    labels={'Poblaci칩n': 'Poblaci칩n Total', 'Per칤odo': 'Tiempo / Per칤odos'}
)

# A침adir una l칤nea horizontal para la Capacidad de Carga (K)
fig.add_hline(y=K, line_dash="dot",
              annotation_text="Capacidad de Carga (K)",
              annotation_position="bottom right",
              line_color="red")

st.plotly_chart(fig, use_container_width=True)


# --- Mostrar Datos (Opcional) ---
st.subheader("Datos Generados")
st.dataframe(df_melted.tail(10)) # Mostrar los 칰ltimos 10 registros
